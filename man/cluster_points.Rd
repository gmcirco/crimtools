% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_points.R
\name{cluster_points}
\alias{cluster_points}
\title{Point clustering methods for spatial data with plotting functions}
\usage{
cluster_points(x, region, dist, minPts, verbose = T, plot = T, return_pts = T)
}
\arguments{
\item{x}{an `sf` point pattern. Should be the point pattern of interest.}

\item{region}{an `sf` polygon feature that defines the study region.}

\item{dist}{a distance measure that defines the maximum neighborhood radius within points
will be considered for cluster assignment.}

\item{minPts}{The minimum number of points required within the dist measure for core points.}

\item{verbose}{Should `dbscan` results be printed? Defaults to TRUE.}

\item{plot}{Should a plot be generated? Defaults to TRUE.}

\item{return_pts}{Should the original x value be returned? Defaults to TRUE. The returned
x value will contain a new column `K` which contains integer identifiers for DBSCAN clusters,
where `K = 0` is a noise point, and `K > 0 ` is a cluster ID.}
}
\description{
Calculates cluster membership using DBScan
}
\details{
The `cluster_points` function applies the Density-based Spatial Clustering
of Applications with Noise (DBSCAN) algorithm. DBSCAN is a fast clustering
method that distinguishes clusters of points from "noise" points based on a
user-defined neighborhood distance and a minimum points threshold. The
`cluster_points` function simplifies the fitting and visualization of spatial
point features. Users can return the original data with cluster IDs attached for
further analysis.

#' @examples
data("newhaven")
data("nh_hom")

cluster_out <- cluster_points(x = nh_hom, region = newhaven, dist = 2000, minPts = 5)
}
\references{
Hahsler M, Piekenbrock M, Doran D (2019). dbscan: Fast Density-Based Clustering with R. Journal of Statistical Software, 91(1), 1-30. doi: 10.18637/jss.v091.i01
}
